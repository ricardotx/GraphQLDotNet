// <auto-generated />
using System;
using GraphQLDotNet.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraphQLDotNet.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210131200447_Create-User-and-Role-Tables")]
    partial class CreateUserandRoleTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("GraphQLDotNet.Data.Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("545562e8-a5a5-4346-8275-ffff9812ac8b"),
                            Description = "Cash account for our users",
                            OwnerId = new Guid("618ebe4a-b37f-48f4-837c-7acb314195c0"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("039cd6e9-a6e1-4443-8113-a18bf341409e"),
                            Description = "Savings account for our users",
                            OwnerId = new Guid("4848e78f-86a2-4548-a87f-c25ef64aad17"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("502de685-91b2-412e-b941-3739973488e9"),
                            Description = "Income account for our users",
                            OwnerId = new Guid("4848e78f-86a2-4548-a87f-c25ef64aad17"),
                            Type = 3
                        });
                });

            modelBuilder.Entity("GraphQLDotNet.Data.Models.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("618ebe4a-b37f-48f4-837c-7acb314195c0"),
                            Address = "John Doe's address",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("4848e78f-86a2-4548-a87f-c25ef64aad17"),
                            Address = "Jane Doe's address",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("GraphQLDotNet.Data.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("UniqueCode");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5575edf-c628-42c6-b653-29b7908c816f"),
                            Code = "Admin"
                        },
                        new
                        {
                            Id = new Guid("7d7aa1eb-de63-414b-a4fc-43d8dec1843e"),
                            Code = "User"
                        });
                });

            modelBuilder.Entity("GraphQLDotNet.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("UniqueUserEmail");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3615b43-42f0-4ac3-b839-a0e22c900784"),
                            Email = "admin@mail.com",
                            Name = "Admin",
                            Password = "123",
                            RoleId = new Guid("a5575edf-c628-42c6-b653-29b7908c816f"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("GraphQLDotNet.Data.Models.Account", b =>
                {
                    b.HasOne("GraphQLDotNet.Data.Models.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("GraphQLDotNet.Data.Models.User", b =>
                {
                    b.HasOne("GraphQLDotNet.Data.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GraphQLDotNet.Data.Models.Owner", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("GraphQLDotNet.Data.Models.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
