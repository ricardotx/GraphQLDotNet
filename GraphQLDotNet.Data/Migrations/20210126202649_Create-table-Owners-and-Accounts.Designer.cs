// <auto-generated />
using System;
using GraphQLDotNet.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GraphQLDotNet.Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210126202649_Create-table-Owners-and-Accounts")]
    partial class CreatetableOwnersandAccounts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("GraphQLDotNet.Data.Entities.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbb1a9c4-7fbf-46c1-b8b6-500ac098d100"),
                            Description = "Cash account for our users",
                            OwnerId = new Guid("ef73ae5f-8b0c-434b-87c7-ba777d8feae9"),
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("884207d5-df87-45b5-897f-22401e355fee"),
                            Description = "Savings account for our users",
                            OwnerId = new Guid("5d3b52a0-d7ac-4584-a3d2-fde1f7905356"),
                            Type = 1
                        },
                        new
                        {
                            Id = new Guid("4a8d556d-4310-4da7-92e7-26cff54a43f9"),
                            Description = "Income account for our users",
                            OwnerId = new Guid("5d3b52a0-d7ac-4584-a3d2-fde1f7905356"),
                            Type = 3
                        });
                });

            modelBuilder.Entity("GraphQLDotNet.Data.Entities.Owner", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Owners");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ef73ae5f-8b0c-434b-87c7-ba777d8feae9"),
                            Address = "John Doe's address",
                            Name = "John Doe"
                        },
                        new
                        {
                            Id = new Guid("5d3b52a0-d7ac-4584-a3d2-fde1f7905356"),
                            Address = "Jane Doe's address",
                            Name = "Jane Doe"
                        });
                });

            modelBuilder.Entity("GraphQLDotNet.Data.Entities.Account", b =>
                {
                    b.HasOne("GraphQLDotNet.Data.Entities.Owner", "Owner")
                        .WithMany("Accounts")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("GraphQLDotNet.Data.Entities.Owner", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
